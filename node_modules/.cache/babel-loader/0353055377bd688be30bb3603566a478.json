{"ast":null,"code":"var _jsxFileName = \"/workspaces/sorting/src/components/Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport { Slider } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux'; // Importing necessary Redux hooks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(_ref) {\n  _s();\n\n  let {\n    selectedAlgorithm,\n    isDisabled,\n    handleAlgorithmChange\n  } = _ref;\n  const dispatch = useDispatch(); // Accessing the dispatch function\n  // Define and access Redux state using useSelector\n\n  const myState = useSelector(state => state.updateProps); // Replace 'myState' with your actual Redux state\n\n  const [max, setMax] = useState(30);\n\n  const handleAlgo = algo => {\n    handleAlgorithmChange(algo);\n  };\n\n  const resetColor = () => {\n    dispatch({\n      type: 'UPDATE_COLOR',\n      color: document.getElementById('color').value\n    });\n  };\n\n  const handleRange = _range => {\n    let new_arr = [...myState.values];\n\n    for (let i = 0; i < new_arr.length; i++) document.getElementById(i).style.transform = `translateX(${i * 11}px)`;\n\n    resetColor();\n    dispatch({\n      type: 'UPDATE_RANGE',\n      range: _range\n    });\n    dispatch({\n      type: 'CHANGE_VALUES'\n    });\n  };\n\n  const handleColor = _color => {\n    dispatch({\n      type: 'UPDATE_COLOR',\n      color: _color\n    });\n  };\n\n  const handleSpeed = _speed => {\n    dispatch({\n      type: 'UPDATE_SPEED',\n      speed: _speed\n    });\n  };\n\n  useEffect(() => {\n    handleRange(30);\n  }, []);\n  useEffect(() => {\n    dispatch({\n      type: 'UPDATE_COLOR',\n      color: document.getElementById('color').value\n    });\n  }, [myState.values]);\n  useEffect(() => {\n    // Update max value based on window width\n    const handleWidth = () => {\n      if (window.innerWidth > 1300) setMax(70);else if (window.innerWidth > 1200) setMax(60);else if (window.innerWidth > 1100) setMax(50);else if (window.innerWidth > 900) setMax(45);else if (window.innerWidth > 800) setMax(40);else if (window.innerWidth > 500) setMax(30);else setMax(20);\n    };\n\n    handleWidth();\n    window.addEventListener('resize', handleWidth);\n    return () => window.removeEventListener('resize', handleWidth);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar__option\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"algo\",\n        children: \"Algorithm: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"algo\",\n        id: \"algo\",\n        onChange: e => handleAlgo(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bubble\",\n          children: \"Bubble Sort \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"merge\",\n          children: \"Merge Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"insertion\",\n          children: \"Insertion Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"selection\",\n          children: \"Selection Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"quick\",\n          children: \"Quick Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar__option\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"range\",\n        children: \"Range: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        style: {\n          width: '180px'\n        },\n        size: \"small\",\n        defaultValue: 30,\n        id: \"slider\",\n        min: 1,\n        className: \"slider\",\n        disabled: isDisabled,\n        max: max,\n        onChange: e => handleRange(e.target.value),\n        valueLabelDisplay: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar__option\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"color\",\n        children: \"Color: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"color\",\n        id: \"color\",\n        onChange: e => handleColor(e.target.value),\n        disabled: isDisabled,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rgb(0, 149, 199)\",\n          style: {\n            color: 'rgb(0, 149, 199)'\n          },\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rgb(85, 212, 0)\",\n          style: {\n            color: 'rgb(10,200,20)'\n          },\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rgb(255, 112, 112)\",\n          style: {\n            color: 'red'\n          },\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"grey\",\n          style: {\n            color: 'grey'\n          },\n          children: \"Black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hashtag#ddd902\",\n          style: {\n            color: 'hashtag#ddd902'\n          },\n          children: \"Yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar__option\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"speed\",\n        children: \"Speed: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"speed\",\n        defaultValue: 100,\n        id: \"speed\",\n        onChange: e => handleSpeed(e.target.value),\n        disabled: isDisabled,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 500,\n          children: \"Slow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 200,\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Fast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 20,\n          children: \"Super Fast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"Ultra Fast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sidebar, \"wEpJPGtc1LrMKC9UVxDJoPC6aRU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/workspaces/sorting/src/components/Sidebar.js"],"names":["React","useState","useEffect","Slider","useDispatch","useSelector","Sidebar","selectedAlgorithm","isDisabled","handleAlgorithmChange","dispatch","myState","state","updateProps","max","setMax","handleAlgo","algo","resetColor","type","color","document","getElementById","value","handleRange","_range","new_arr","values","i","length","style","transform","range","handleColor","_color","handleSpeed","_speed","speed","handleWidth","window","innerWidth","addEventListener","removeEventListener","e","target","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport { Slider } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux'; // Importing necessary Redux hooks\n\nfunction Sidebar({ selectedAlgorithm, isDisabled, handleAlgorithmChange }) {\n    const dispatch = useDispatch(); // Accessing the dispatch function\n\n    // Define and access Redux state using useSelector\n    const myState = useSelector(state => state.updateProps); // Replace 'myState' with your actual Redux state\n    const [max, setMax] = useState(30);\n\n    const handleAlgo = (algo) => {\n        handleAlgorithmChange(algo);\n    }\n\n    const resetColor = () => {\n        dispatch({\n            type: 'UPDATE_COLOR',\n            color: document.getElementById('color').value\n        });\n    }\n\n    const handleRange = (_range) => {\n        let new_arr = [...myState.values];\n        for (let i = 0; i < new_arr.length; i++)\n            document.getElementById(i).style.transform = `translateX(${i * 11}px)`;\n\n        resetColor();\n\n        dispatch({\n            type: 'UPDATE_RANGE',\n            range: _range\n        });\n        dispatch({\n            type: 'CHANGE_VALUES'\n        });\n    }\n\n    const handleColor = (_color) => {\n        dispatch({\n            type: 'UPDATE_COLOR',\n            color: _color\n        });\n    }\n\n    const handleSpeed = (_speed) => {\n        dispatch({\n            type: 'UPDATE_SPEED',\n            speed: _speed\n        });\n    }\n\n    useEffect(() => {\n        handleRange(30);\n    }, []);\n\n    useEffect(() => {\n        dispatch({\n            type: 'UPDATE_COLOR',\n            color: document.getElementById('color').value\n        });\n    }, [myState.values]);\n\n    useEffect(() => {\n        // Update max value based on window width\n        const handleWidth = () => {\n            if (window.innerWidth > 1300)\n                setMax(70);\n            else if (window.innerWidth > 1200)\n                setMax(60);\n            else if (window.innerWidth > 1100)\n                setMax(50);\n            else if (window.innerWidth > 900)\n                setMax(45);\n            else if (window.innerWidth > 800)\n                setMax(40);\n            else if (window.innerWidth > 500)\n                setMax(30);\n            else\n                setMax(20);\n        };\n\n        handleWidth();\n        window.addEventListener('resize', handleWidth);\n        return () => window.removeEventListener('resize', handleWidth);\n    }, []);\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__option\">\n                <label htmlFor=\"algo\">Algorithm: </label>\n                <select name=\"algo\" id=\"algo\" onChange={(e) => handleAlgo(e.target.value)} >\n                    <option value=\"bubble\">Bubble Sort </option>\n                    <option value=\"merge\">Merge Sort</option>\n                    <option value=\"insertion\">Insertion Sort</option>\n                    <option value=\"selection\">Selection Sort</option>\n                    <option value=\"quick\">Quick Sort</option>\n                </select>\n            </div>\n\n            <div className=\"sidebar__option\">\n                <label htmlFor=\"range\">Range: </label>\n                <Slider\n                    style={{ width: '180px' }}\n                    size=\"small\"\n                    defaultValue={30}\n                    id='slider'\n                    min={1}\n                    className='slider'\n                    disabled={isDisabled}\n                    max={max}\n                    onChange={(e) => handleRange(e.target.value)}\n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n\n            <div className=\"sidebar__option\">\n                <label htmlFor=\"color\">Color: </label>\n                <select name=\"color\" id=\"color\" onChange={(e) => handleColor(e.target.value)} disabled={isDisabled}>\n                    <option value=\"rgb(0, 149, 199)\" style={{ color: 'rgb(0, 149, 199)' }}>Blue</option>\n                    <option value='rgb(85, 212, 0)' style={{ color: 'rgb(10,200,20)' }}>Green</option>\n                    <option value=\"rgb(255, 112, 112)\" style={{ color: 'red' }}>Red</option>\n                    <option value=\"grey\" style={{ color: 'grey' }}>Black</option>\n                    <option value=\"hashtag#ddd902\" style={{ color: 'hashtag#ddd902' }}>Yellow</option>\n                </select>\n            </div>\n\n            <div className=\"sidebar__option\">\n                <label htmlFor=\"speed\">Speed: </label>\n                <select name=\"speed\" defaultValue={100} id=\"speed\" onChange={(e) => handleSpeed(e.target.value)} disabled={isDisabled}>\n                    <option value={500} >Slow</option>\n                    <option value={200} >Medium</option>\n                    <option value={100} >Fast</option>\n                    <option value={20} >Super Fast</option>\n                    <option value={5} >Ultra Fast</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n\n\n"]},"metadata":{},"sourceType":"module"}