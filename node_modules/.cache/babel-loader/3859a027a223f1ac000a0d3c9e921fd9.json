{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAKSHI SINGH\\\\OneDrive\\\\Desktop\\\\sorting\\\\src\\\\components\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport { Slider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(_ref) {\n  _s();\n\n  let {\n    updateProps,\n    setUpdateProps\n  } = _ref;\n  const [max, setMax] = useState(30);\n\n  const handleAlgo = algo => {\n    setUpdateProps(prevState => ({ ...prevState,\n      algorithm: algo\n    }));\n  };\n\n  const resetColor = () => {\n    setUpdateProps(prevState => ({ ...prevState,\n      color: document.getElementById('color').value\n    }));\n  };\n\n  const handleRange = _range => {\n    let newProps = { ...updateProps\n    };\n    newProps.range = _range;\n    setUpdateProps(newProps);\n    resetColor();\n  };\n\n  const handleColor = _color => {\n    setUpdateProps(prevState => ({ ...prevState,\n      color: _color\n    }));\n  };\n\n  const handleSpeed = _speed => {\n    setUpdateProps(prevState => ({ ...prevState,\n      speed: _speed\n    }));\n  };\n\n  const handleWidth = () => {\n    let newMax;\n    if (window.innerWidth > 1300) newMax = 70;else if (window.innerWidth > 1200) newMax = 60;else if (window.innerWidth > 1100) newMax = 50;else if (window.innerWidth > 900) newMax = 45;else if (window.innerWidth > 800) newMax = 40;else if (window.innerWidth > 500) newMax = 30;else newMax = 20;\n    setMax(newMax);\n  };\n\n  useEffect(() => {\n    handleWidth();\n    window.addEventListener('resize', handleWidth);\n    return () => window.removeEventListener('resize', handleWidth);\n  }, []);\n  useEffect(() => {\n    resetColor();\n  }, [updateProps === null || updateProps === void 0 ? void 0 : updateProps.values]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar__option\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"algo\",\n        children: \"Algorithm: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"algo\",\n        id: \"algo\",\n        onChange: e => handleAlgo(e.target.value),\n        disabled: updateProps !== null && updateProps !== void 0 && updateProps.play ? true : false,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bubble\",\n          children: \"Bubble Sort \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"merge\",\n          children: \"Merge Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"insertion\",\n          children: \"Insertion Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"selection\",\n          children: \"Selection Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"quick\",\n          children: \"Quick Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar__option\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"range\",\n        children: \"Range: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        style: {\n          width: '180px'\n        },\n        size: \"small\",\n        defaultValue: 30,\n        id: \"slider\",\n        min: 1,\n        className: \"slider\",\n        disabled: updateProps.play ? true : false,\n        max: max,\n        onChange: e => handleRange(e.target.value),\n        valueLabelDisplay: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar__option\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"color\",\n        children: \"Color: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"color\",\n        id: \"color\",\n        onChange: e => handleColor(e.target.value),\n        disabled: updateProps.play ? true : false,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rgb(0, 149, 199)\",\n          style: {\n            color: 'rgb(0, 149, 199)'\n          },\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rgb(85, 212, 0)\",\n          style: {\n            color: 'rgb(10,200,20)'\n          },\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"rgb(255, 112, 112)\",\n          style: {\n            color: 'red'\n          },\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"grey\",\n          style: {\n            color: 'grey'\n          },\n          children: \"Black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"#ddd902\",\n          style: {\n            color: '#ddd902'\n          },\n          children: \"Yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar__option\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"speed\",\n        children: \"Speed: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"speed\",\n        defaultValue: 100,\n        id: \"speed\",\n        onChange: e => handleSpeed(e.target.value),\n        disabled: updateProps.play ? true : false,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 500,\n          children: \"Slow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 200,\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Fast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 20,\n          children: \"Super Fast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 5,\n          children: \"Ultra Fast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Sidebar, \"tPKr3Ne/hmaHhpNRBvOxZ71CnAM=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/SAKSHI SINGH/OneDrive/Desktop/sorting/src/components/Sidebar.js"],"names":["React","useState","useEffect","Slider","Sidebar","updateProps","setUpdateProps","max","setMax","handleAlgo","algo","prevState","algorithm","resetColor","color","document","getElementById","value","handleRange","_range","newProps","range","handleColor","_color","handleSpeed","_speed","speed","handleWidth","newMax","window","innerWidth","addEventListener","removeEventListener","values","e","target","play","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Sidebar.css';\r\nimport { Slider } from '@mui/material';\r\n\r\nfunction Sidebar({ updateProps, setUpdateProps }) {\r\n\r\n   const [max, setMax] = useState(30);\r\n\r\n   const handleAlgo = (algo) => {\r\n      setUpdateProps(prevState => ({\r\n         ...prevState,\r\n         algorithm: algo\r\n      }));\r\n   }\r\n\r\n   const resetColor = () => {\r\n      setUpdateProps(prevState => ({\r\n         ...prevState,\r\n         color: document.getElementById('color').value\r\n      }));\r\n   }\r\n\r\n   const handleRange = (_range) => {\r\n      let newProps = { ...updateProps };\r\n      newProps.range = _range;\r\n      setUpdateProps(newProps);\r\n      resetColor();\r\n   }\r\n\r\n   const handleColor = (_color) => {\r\n      setUpdateProps(prevState => ({\r\n         ...prevState,\r\n         color: _color\r\n      }));\r\n   }\r\n\r\n   const handleSpeed = (_speed) => {\r\n      setUpdateProps(prevState => ({\r\n         ...prevState,\r\n         speed: _speed\r\n      }));\r\n   }\r\n\r\n   const handleWidth = () => {\r\n      let newMax;\r\n      if (window.innerWidth > 1300)\r\n         newMax = 70;\r\n      else if (window.innerWidth > 1200)\r\n         newMax = 60;\r\n      else if (window.innerWidth > 1100)\r\n         newMax = 50;\r\n      else if (window.innerWidth > 900)\r\n         newMax = 45;\r\n      else if (window.innerWidth > 800)\r\n         newMax = 40;\r\n      else if (window.innerWidth > 500)\r\n         newMax = 30;\r\n      else\r\n         newMax = 20;\r\n      setMax(newMax);\r\n   }\r\n\r\n   useEffect(() => {\r\n      handleWidth();\r\n      window.addEventListener('resize', handleWidth);\r\n      return () => window.removeEventListener('resize', handleWidth);\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      resetColor();\r\n   }, [updateProps?.values]);\r\n\r\n   return (\r\n      <div className=\"sidebar\">\r\n         <div className=\"sidebar__option\">\r\n            <label htmlFor=\"algo\">Algorithm: </label>\r\n            <select name=\"algo\" id=\"algo\" onChange={(e) => handleAlgo(e.target.value)} disabled={updateProps?.play ? true : false}>\r\n               <option value=\"bubble\">Bubble Sort </option>\r\n               <option value=\"merge\">Merge Sort</option>\r\n               <option value=\"insertion\">Insertion Sort</option>\r\n               <option value=\"selection\">Selection Sort</option>\r\n               <option value=\"quick\">Quick Sort</option>\r\n            </select>\r\n         </div>\r\n\r\n         <div className=\"sidebar__option\">\r\n            <label htmlFor=\"range\">Range: </label>\r\n            <Slider\r\n               style={{ width: '180px' }}\r\n               size=\"small\"\r\n               defaultValue={30}\r\n               id='slider'\r\n               min={1}\r\n               className='slider'\r\n               disabled={updateProps.play ? true : false}\r\n               max={max}\r\n               onChange={(e) => handleRange(e.target.value)}\r\n               valueLabelDisplay=\"auto\"\r\n            />\r\n         </div>\r\n\r\n         <div className=\"sidebar__option\">\r\n            <label htmlFor=\"color\">Color: </label>\r\n            <select name=\"color\" id=\"color\" onChange={(e) => handleColor(e.target.value)} disabled={updateProps.play ? true : false}>\r\n               <option value=\"rgb(0, 149, 199)\" style={{ color: 'rgb(0, 149, 199)' }}>Blue</option>\r\n               <option value='rgb(85, 212, 0)' style={{ color: 'rgb(10,200,20)' }}>Green</option>\r\n               <option value=\"rgb(255, 112, 112)\" style={{ color: 'red' }}>Red</option>\r\n               <option value=\"grey\" style={{ color: 'grey' }}>Black</option>\r\n               <option value=\"#ddd902\" style={{ color: '#ddd902' }}>Yellow</option>\r\n            </select>\r\n         </div>\r\n\r\n         <div className=\"sidebar__option\">\r\n            <label htmlFor=\"speed\">Speed: </label>\r\n            <select name=\"speed\" defaultValue={100} id=\"speed\" onChange={(e) => handleSpeed(e.target.value)} disabled={updateProps.play ? true : false}>\r\n               <option value={500} >Slow</option>\r\n               <option value={200} >Medium</option>\r\n               <option value={100} >Fast</option>\r\n               <option value={20} >Super Fast</option>\r\n               <option value={5} >Ultra Fast</option>\r\n            </select>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Sidebar;\r\n \r\n\r\n"]},"metadata":{},"sourceType":"module"}