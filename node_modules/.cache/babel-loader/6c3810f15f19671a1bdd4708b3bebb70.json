{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAKSHI SINGH\\\\OneDrive\\\\Desktop\\\\sorting\\\\src\\\\components\\\\SortingCodeImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './SortingCodeImages.css';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SortingCodeImages() {\n  _s();\n\n  // State to store the currently selected algorithm\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('bubble'); // Mapping of algorithm names to their corresponding image filenames\n\n  const algorithmImages = {\n    bubble: 'bubble.png',\n    insertion: 'insertion.png',\n    quick: 'quick.png',\n    selection: 'selection.png',\n    merge: 'merge.png'\n  }; // Function to handle algorithm change\n\n  const handleAlgorithmChange = event => {\n    setSelectedAlgorithm(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sorting-code\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"algorithm-dropdown\",\n      value: selectedAlgorithm,\n      onChange: handleAlgorithmChange,\n      children: Object.keys(algorithmImages).map(algorithm => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: algorithm,\n        children: [algorithm.charAt(0).toUpperCase() + algorithm.slice(1), \" Sort\"]\n      }, algorithm, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"algorithm-code\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"algorithm\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: algorithmImages[selectedAlgorithm],\n          alt: `${selectedAlgorithm} Sort Code`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SortingCodeImages, \"cdtQFgZhFpDWFPodIBiZbEWAjeA=\");\n\n_c = SortingCodeImages;\nexport default SortingCodeImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingCodeImages\");","map":{"version":3,"sources":["C:/Users/SAKSHI SINGH/OneDrive/Desktop/sorting/src/components/SortingCodeImages.js"],"names":["React","useState","Header","SortingCodeImages","selectedAlgorithm","setSelectedAlgorithm","algorithmImages","bubble","insertion","quick","selection","merge","handleAlgorithmChange","event","target","value","Object","keys","map","algorithm","charAt","toUpperCase","slice"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,yBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAEzB;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAC,QAAD,CAA1D,CAHyB,CAMzB;;AACA,QAAMK,eAAe,GAAG;AACpBC,IAAAA,MAAM,EAAE,YADY;AAEpBC,IAAAA,SAAS,EAAE,eAFS;AAGpBC,IAAAA,KAAK,EAAE,WAHa;AAIpBC,IAAAA,SAAS,EAAE,eAJS;AAKpBC,IAAAA,KAAK,EAAE;AALa,GAAxB,CAPyB,CAezB;;AACA,QAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACrCR,IAAAA,oBAAoB,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BAEI;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAuC,MAAA,KAAK,EAAEX,iBAA9C;AAAiE,MAAA,QAAQ,EAAEQ,qBAA3E;AAAA,gBACKI,MAAM,CAACC,IAAP,CAAYX,eAAZ,EAA6BY,GAA7B,CAAiCC,SAAS,iBACvC;AAAwB,QAAA,KAAK,EAAEA,SAA/B;AAAA,mBACKA,SAAS,CAACC,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAoCF,SAAS,CAACG,KAAV,CAAgB,CAAhB,CADzC;AAAA,SAAaH,SAAb;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEb,eAAe,CAACF,iBAAD,CAAzB;AAA8C,UAAA,GAAG,EAAG,GAAEA,iBAAkB;AAAxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAtCQD,iB;;KAAAA,iB;AAwCT,eAAeA,iBAAf","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport './SortingCodeImages.css';\r\nimport Header from './Header';\r\n\r\nfunction SortingCodeImages() {\r\n    \r\n    // State to store the currently selected algorithm\r\n    const [selectedAlgorithm, setSelectedAlgorithm] = useState('bubble');\r\n\r\n\r\n    // Mapping of algorithm names to their corresponding image filenames\r\n    const algorithmImages = {\r\n        bubble: 'bubble.png',\r\n        insertion: 'insertion.png',\r\n        quick: 'quick.png',\r\n        selection: 'selection.png',\r\n        merge: 'merge.png'\r\n    };\r\n\r\n    // Function to handle algorithm change\r\n    const handleAlgorithmChange = (event) => {\r\n        setSelectedAlgorithm(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"sorting-code\">\r\n            {/* Dropdown menu for selecting sorting algorithm */}\r\n            <select className=\"algorithm-dropdown\" value={selectedAlgorithm} onChange={handleAlgorithmChange}>\r\n                {Object.keys(algorithmImages).map(algorithm => (\r\n                    <option key={algorithm} value={algorithm}>\r\n                        {algorithm.charAt(0).toUpperCase() + algorithm.slice(1)} Sort\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {/* Display selected algorithm image and text */}\r\n            <div className=\"algorithm-code\">\r\n                <div className=\"algorithm\">\r\n                    <img src={algorithmImages[selectedAlgorithm]} alt={`${selectedAlgorithm} Sort Code`} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SortingCodeImages;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}